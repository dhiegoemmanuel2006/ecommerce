package com.exemplo.service;

import com.exemplo.model.Produto;
import org.springframework.stereotype.Service;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class ProdutoService {

    // Simula uma lista de produtos (substitua por um banco de dados real)
    private List<Produto> produtos = Arrays.asList(
            new Produto(1L, "Notebook Dell XPS 13", 1200.00, "Eletrônicos", 10),
            new Produto(2L, "Notebook MacBook Pro 16", 2500.00, "Eletrônicos", 5),
            new Produto(3L, "Mouse Logitech MX Master 3", 99.90, "Acessórios", 20)
    );

    // Método para buscar produtos por nome
    public List<Produto> buscarPorNome(String nome) {
        return produtos.stream()
                .filter(produto -> produto.getNome().toLowerCase().contains(nome.toLowerCase()))
                .collect(Collectors.toList());
    }
}
4. Classe ProdutoController (Controller)
Endpoint para pesquisar produtos.

java
Copy
package com.exemplo.controller;

import com.exemplo.model.Produto;
import com.exemplo.service.ProdutoService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/produtos")
public class ProdutoController {

    @Autowired
    private ProdutoService produtoService;

    @GetMapping
    public ResponseEntity<Map<String, Object>> buscarPorNome(@RequestParam String nome) {
        List<Produto> produtos = produtoService.buscarPorNome(nome);

        // Monta a resposta com metadados
        Map<String, Object> resposta = new HashMap<>();
        resposta.put("status", "success");
        resposta.put("message", produtos.isEmpty() ? "Nenhum produto encontrado." : "Produtos encontrados com sucesso.");
        resposta.put("data", produtos);
        resposta.put("total", produtos.size());
        resposta.put("pagina", 1); // Exemplo de paginação
        resposta.put("limite", 10); // Exemplo de limite de itens por página

        return ResponseEntity.ok(resposta);
    }
}